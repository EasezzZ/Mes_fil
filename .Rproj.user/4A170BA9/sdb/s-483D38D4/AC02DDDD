{
    "contents" : "#Read Measurement data of BTH from a single file and \n#process these data into daily averaged PM2.5 concentration for identifying the anomalies\n\n#By Yixuan Zheng,2014/11/27\n\nlibrary(plyr)\n\n#define function to convert factor to numeric (There is not a function can be used to do this)\nas.numeric.factor <- function(x) {as.numeric(levels(x))[x]}\n\n#=======set input & output directory=========\n\nindir <- \"F:/Data_Source/0.Data_Source/2.观测数据/2.污染物观测\"\noutdir <- \"D:/1.科研/2.BJ_PM2.5/4.结果/Mes_fil_out\"\n\ninfile <- paste(indir,\"BTH2013.csv\",sep=\"/\")\n\n#========read input csv==========\n\ninmes <- read.csv(infile)\nreq.col <- colnames(inmes)[c(1,2,3,4,5,16,17,20,21)]\n\n#========primary rearrange & filter input data==========\n\n\n#----------seletct required columns and valid dat----------\nmes.pm.n <- subset(inmes, PM2_5 != \"NULL\"  & TimePoint != \"NULL\", select=req.col) \nmes.pm <- subset(mes.pm.n,as.numeric.factor(PM2_5) > 0 & as.numeric.factor(PM2_5) < 1000 )\nmes.pm$PM2_5 <- as.numeric.factor(mes.pm$PM2_5) #warning \"NAs introduced by coercion\" donot matter\n\nrm(mes.pm.n) # free variable\n\n#---------------filter duplicate data in mes.pm----------------------\n#data which with same StationCond TimePoint is regard as duplicate data\n\nmes.dup <- subset(mes.pm,select=c(StationCode,TimePoint))\nind.dup <- duplicated(mes.dup)\nmes.pm <- mes.pm[!ind.dup,]\n\nrm(mes.dup,ind.dup) # free variable\n\n#-----------TimePoint manipulate------------\n\ntimetag <- strsplit(as.character(mes.pm$TimePoint), \" \")\ndatetag <- unlist(timetag)[c((1:length(timetag))*2-1)]\nhourtag <- unlist(timetag)[c((1:length(timetag))*2)]\nmes.pm$Year <- as.numeric(unlist(strsplit(datetag, \"/\"))[c((1:length(hourtag))*3-2)])\nmes.pm$Month <- as.numeric(unlist(strsplit(datetag, \"/\"))[c((1:length(hourtag))*3-1)])\nmes.pm$Day<- as.numeric(unlist(strsplit(datetag, \"/\"))[c((1:length(hourtag))*3)])\nmes.pm$Hour <- as.numeric(unlist(strsplit(hourtag, \":\"))[c((1:length(hourtag))*2-1)])\nmes.pm$Date <- as.Date(datetag)\n\nrm(timetag,datetag,hourtag) # free variable\n#--------------StationCode manipulate---------\n\n#turn $StationCode into numeric and store in column $Station\nmes.pm$Station <- as.numeric(gsub(\"A\", \"\", mes.pm$StationCode))\nmes.pm <- subset(mes.pm,select=c(Area,Area_code,PositionName,Station,Latitude,Longitude,PM2_5,PM2_5_24h,Year, Month, Day, Hour,Date))\n\n#=================average measurement on daily basis=====================\n\nmes.avg <- ddply(mes.pm,.(Station,Date),function(.ele) mean(.ele$PM2_5)) #ddply reture dataframe\n\nsite <- unique(mes.avg$Station) #site name\nfor ( site.ind in 1:length(site) ){\n  jpeg(filename=paste(outdir,\"/time_series\",as.character(unique(site.ind)),\".jpg\",sep=\"\"))\n  plot.ts(mes.avg$V1[mes.avg$Station==site[site.ind]])\n  dev.off()\n}\n\n\n\n\n\n\n\n\n",
    "created" : 1417059200172.000,
    "dirty" : true,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "655638893",
    "id" : "AC02DDDD",
    "lastKnownWriteTime" : 1417168636,
    "path" : "D:/1.科研/2.BJ_PM2.5/4.结果/Mes_fil/Plot_daily.R",
    "project_path" : "Plot_daily.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}